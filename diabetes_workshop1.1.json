{"paragraphs":[{"text":"%md\nThis notebok demonstrates how **Amazon Glue** can be used to transform the data stored in the RDS database.We will read the data from the database and run a serries of transformations on it. Finally write that data back into a target table in RDS and also an S3 bucket. Execute each paragraph one by one to see the output of each section.","user":"admin","dateUpdated":"2017-11-20T23:22:33+0000","config":{"lineNumbers":false,"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856897_-2006095835","id":"20171105-232144_1566981340","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:22:33+0000","dateFinished":"2017-11-20T23:22:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1566","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>This notebok demonstrates how <strong>Amazon Glue</strong> can be used to transform the data stored in the RDS database.We will read the data from the database and run a serries of transformations on it. Finally write that data back into a target table in RDS and also an S3 bucket. Execute each paragraph one by one to see the output of each section.</p>\n</div>"}]}},{"title":"Import Necessary Libraries","text":"import sys\nfrom awsglue.transforms import *\nfrom awsglue.utils import getResolvedOptions\nfrom pyspark.context import SparkContext\nfrom awsglue.dynamicframe import DynamicFrame, DynamicFrameReader, DynamicFrameWriter, DynamicFrameCollection\nfrom awsglue.context import GlueContext\nfrom awsglue.job import Job\nfrom pyspark.sql import functions as F\nfrom pyspark.sql.types import IntegerType\n\n","user":"admin","dateUpdated":"2017-11-20T23:17:24+0000","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856900_-2007250082","id":"20171105-165008_800437773","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:17:24+0000","dateFinished":"2017-11-20T23:17:24+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1567"},{"text":"%md\nFirst, we create two datsources from our patients and labs tables in RDS. **Remember to change the name of the database and table_name per the values in your glue data catalog.**","user":"admin","dateUpdated":"2017-11-20T23:22:37+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856900_-2007250082","id":"20171105-233106_762630759","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:22:37+0000","dateFinished":"2017-11-20T23:22:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1568","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>First, we create two datsources from our patients and labs tables in RDS. <strong>Remember to change the name of the database and table_name per the values in your glue data catalog.</strong></p>\n</div>"}]}},{"text":"glueContext = GlueContext(SparkContext.getOrCreate())\n\n\ndatasource0 = glueContext.create_dynamic_frame.from_catalog(database = \"gluedatacatalog\", table_name = \"source_diabetes_patients\", transformation_ctx = \"datasource0\")\ndf0 = datasource0.toDF()\ndf0.show()\n\ndatasource1 = glueContext.create_dynamic_frame.from_catalog(database = \"gluedatacatalog\", table_name = \"source_diabetes_labs\"\n, transformation_ctx = \"datasource1\")\ndf1 = datasource1.toDF()\ndf1.show()","user":"admin","dateUpdated":"2017-11-20T23:17:28+0000","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856901_-2007634831","id":"20171105-165038_175176679","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:17:29+0000","dateFinished":"2017-11-20T23:17:37+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1569"},{"text":"%md\nNext, we create saperate data frames to store the aggregated lab values for each patient. ","user":"admin","dateUpdated":"2017-11-20T23:22:46+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856901_-2007634831","id":"20171105-165053_159307760","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:22:46+0000","dateFinished":"2017-11-20T23:22:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1570","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Next, we create saperate data frames to store the aggregated lab values for each patient.</p>\n</div>"}]}},{"text":"sqlContext.registerDataFrameAsTable(df1, \"labs\")\n\ndf_glucose = sqlContext.sql(\"SELECT PatientID ,max(LabValue) as maxvalueglucose, avg(LabValue) as avgvalueglucose, LabType from labs group by PatientID,LabType having LabType='Glucose'\")\n\ndf_hba1c = sqlContext.sql(\"SELECT PatientID ,avg(LabValue) as avgvaluehba1c, LabType from labs group by PatientID,LabType having LabType='HBA1C'\")\n\ndf_gfr = sqlContext.sql(\"SELECT PatientID ,min(LabValue) as minvaluegfr, LabType from labs group by PatientID,LabType having LabType='GFR'\")\n\ndf_glucose.show()\ndf_hba1c.show()\ndf_gfr.show()","user":"admin","dateUpdated":"2017-11-20T23:17:43+0000","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856902_-2006480584","id":"20171105-165308_460306949","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:17:43+0000","dateFinished":"2017-11-20T23:17:47+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1571"},{"text":"%md\nNow, lets join these tables with patient table to get a de-normalized record for a patient with his demographics and labs.","user":"admin","dateUpdated":"2017-11-20T23:22:49+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856902_-2006480584","id":"20171105-233507_1455068798","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:22:49+0000","dateFinished":"2017-11-20T23:22:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1572","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Now, lets join these tables with patient table to get a de-normalized record for a patient with his demographics and labs.</p>\n</div>"}]}},{"text":"\n\ndf3=df0.join(df_glucose, df0.PatientID == df_glucose.PatientID).drop(df_glucose.PatientID).drop(df_glucose.LabType)\ndf4=df3.join(df_hba1c, df3.PatientID == df_hba1c.PatientID).drop(df_hba1c.PatientID).drop(df_hba1c.LabType)\ndf5=df4.join(df_gfr, df4.PatientID == df_gfr.PatientID).drop(df_gfr.PatientID).drop(df_gfr.LabType)\n\ndf5.show()\n","user":"admin","dateUpdated":"2017-11-20T23:17:50+0000","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856902_-2006480584","id":"20171105-165802_1319024486","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:17:50+0000","dateFinished":"2017-11-20T23:18:02+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1573"},{"text":"%md\nWe now add new boolean columns HasDiabeticRetinopathy and HasKidneyDisease. This store 1 (true) or 0 (false) based on conditions as shown in the code block below.","user":"admin","dateUpdated":"2017-11-20T23:22:53+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856903_-2006865333","id":"20171105-233703_107268558","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:22:53+0000","dateFinished":"2017-11-20T23:22:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1574","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>We now add new boolean columns HasDiabeticRetinopathy and HasKidneyDisease. This store 1 (true) or 0 (false) based on conditions as shown in the code block below.</p>\n</div>"}]}},{"text":"df_hasdiabeticretinopathy=df5.withColumn('HasDiabeticRetinopathy', F.when(df5.maxvalueglucose > 170, 1).otherwise(0))\ndf_haskidneydisease=df_hasdiabeticretinopathy.withColumn('HasKidneyDisease', F.when(df_hasdiabeticretinopathy.minvaluegfr < 16, 1).otherwise(0))\n\ndf_haskidneydisease.show()","user":"admin","dateUpdated":"2017-11-20T23:18:05+0000","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856903_-2006865333","id":"20171105-171714_1564155397","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:18:06+0000","dateFinished":"2017-11-20T23:18:13+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1575"},{"text":"%md\nNext, we will add two category attributes HBA1CCategory and glucoseCategory. Based on these two attributes, we set the value of the binary attribute HasHighHBA1C.","user":"admin","dateUpdated":"2017-11-20T23:22:56+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856904_-2008789078","id":"20171105-233844_1988815659","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:22:56+0000","dateFinished":"2017-11-20T23:22:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1576","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Next, we will add two category attributes HBA1CCategory and glucoseCategory. Based on these two attributes, we set the value of the binary attribute HasHighHBA1C.</p>\n</div>"}]}},{"text":"df_HBA1CCategory=df_haskidneydisease.withColumn('HBA1CCategory', F.when(df_haskidneydisease.avgvaluehba1c < 7, \"ok\").\nwhen(df_haskidneydisease.avgvaluehba1c.between(7, 8.5),\"high\").otherwise(\"very high\"))\n\ndf_glucoseCategory=df_HBA1CCategory.withColumn('glucoseCategory', F.when(df_HBA1CCategory.avgvalueglucose < 110, \"ok\")\n.when(df_HBA1CCategory.avgvalueglucose.between(110, 140),\"high\").when(df_HBA1CCategory.avgvalueglucose.between(140, 180),\"very high\").otherwise(\"extremely high\"))\n\ndf_hba1ccategory=df_glucoseCategory.withColumn('HasHighHBA1C', F.when(df_glucoseCategory.HBA1CCategory.isin (\"high\",\"very high\"), 1).otherwise(0))\n\ndf_hba1ccategory.show()\n","user":"admin","dateUpdated":"2017-11-20T23:18:17+0000","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856904_-2008789078","id":"20171105-180917_1072175860","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:18:17+0000","dateFinished":"2017-11-20T23:18:23+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1577"},{"text":"%md\nSo, now we have all the desired transformations built on the base dataset. Lets construct a final data frame that will be written into the target table in RDS and the S3 bucket.","user":"admin","dateUpdated":"2017-11-20T23:22:59+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856904_-2008789078","id":"20171105-234104_1117622796","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:22:59+0000","dateFinished":"2017-11-20T23:22:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1578","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>So, now we have all the desired transformations built on the base dataset. Lets construct a final data frame that will be written into the target table in RDS and the S3 bucket.</p>\n</div>"}]}},{"text":"df_final=df_hba1ccategory.select('PatientID','PatientGender','PatientRace','HasHighHba1c','HasDiabeticRetinopathy'\n,'HasKidneyDisease', 'glucoseCategory', 'HBA1CCategory')\n\ndf_final.show()\n","user":"admin","dateUpdated":"2017-11-20T23:18:34+0000","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856905_-2009173826","id":"20171105-181243_700759087","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:18:35+0000","dateFinished":"2017-11-20T23:18:39+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1579"},{"text":"%md\nNow, we will call the datasink operation to write the data into S3 and RDS. **Remember to change the name of the database and table_name per your glue data catalog. Also, make sure to replace \"S3BucketName\" with the name of the S3 bucket created by the cloud formation template. You can find it in the outputs tab of the cloudformation stack.**","user":"admin","dateUpdated":"2017-11-20T23:23:02+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856905_-2009173826","id":"20171105-234306_787934488","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:23:02+0000","dateFinished":"2017-11-20T23:23:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1580","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Now, we will call the datasink operation to write the data into S3 and RDS. <strong>Remember to change the name of the database and table_name per your glue data catalog. Also, make sure to replace &ldquo;S3BucketName&rdquo; with the name of the S3 bucket created by the cloud formation template. You can find it in the outputs tab of the cloudformation stack.</strong></p>\n</div>"}]}},{"text":"dynamicframeout0 = DynamicFrame.fromDF(df_final, glueContext, \"df_final\")\n\ndatasink1 = glueContext.write_dynamic_frame.from_catalog(frame = dynamicframeout0, database = \"gluedatacatalog\", table_name = \"source_diabetes_diabetesstudy\", transformation_ctx = \"datasink1\")\n\ndatasink = glueContext.write_dynamic_frame.from_options(frame = dynamicframeout0, connection_type = \"s3\", connection_options = \n{\"path\": \"s3://S3BucketName/\"}, format = \"csv\", transformation_ctx = \"datasink\")\n\n","user":"admin","dateUpdated":"2017-11-20T23:18:46+0000","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856906_-2008019580","id":"20171105-183043_146209655","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:18:46+0000","dateFinished":"2017-11-20T23:18:55+0000","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1581"},{"text":"%md\nThe data is now inserted into the target RDS table DiabetesStudy and also the target S3 bucket. Go to the database and the S3 bucket and verify that you can see data.","user":"admin","dateUpdated":"2017-11-20T23:23:07+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856906_-2008019580","id":"20171106-213254_374720584","dateCreated":"2017-11-19T02:34:16+0000","dateStarted":"2017-11-20T23:23:07+0000","dateFinished":"2017-11-20T23:23:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1582","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>The data is now inserted into the target RDS table DiabetesStudy and also the target S3 bucket. Go to the database and the S3 bucket and verify that you can see data.</p>\n</div>"}]}},{"text":"%md\n","dateUpdated":"2017-11-19T02:34:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1511058856907_-2008404329","id":"20171105-234629_1293581668","dateCreated":"2017-11-19T02:34:16+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1583"}],"name":"diabetes_workshop1.1","id":"2D268CHUY","angularObjects":{"2CRE5X63N:shared_process":[],"2CQZ9JC8F:shared_process":[],"2CNAPD13W:shared_process":[],"2CRC324G8:existing_process":[],"2CQ1X8PFU:shared_process":[],"2CNFC7TNE:shared_process":[],"2CMQ2EHTE:shared_process":[],"2CQUCJVJA:shared_process":[],"2CQY3SUDK:shared_process":[],"2CNA37GFQ:shared_process":[],"2CPH9H73W:shared_process":[],"2CR2XFEE3:shared_process":[],"2CQ9YVF7W:shared_process":[],"2CP1P36EU:shared_process":[],"2CMR9MKCE:shared_process":[],"2CR2YZBFW:shared_process":[],"2CPJK4U6W:shared_process":[],"2CR2Z9UR2:shared_process":[],"2CPQWHWM3:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}